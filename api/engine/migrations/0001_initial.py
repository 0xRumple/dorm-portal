# Generated by Django 2.1.3 on 2018-12-13 22:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import i18nfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_manager', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=60)),
                ('account_name', models.CharField(max_length=60)),
                ('account_number', models.CharField(max_length=60)),
                ('iban', models.CharField(max_length=60)),
                ('swift', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=1)),
                ('code', models.CharField(max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Dormitory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('about', i18nfield.fields.I18nCharField(max_length=1000)),
                ('geo_longitude', models.CharField(max_length=20)),
                ('geo_latitude', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=150)),
                ('contact_name', models.CharField(max_length=60)),
                ('contact_email', models.CharField(max_length=60)),
                ('contact_number', models.CharField(max_length=60)),
                ('contact_fax', models.CharField(max_length=60)),
                ('cover', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', i18nfield.fields.I18nCharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='')),
                ('is_3d', models.BooleanField(default=False)),
                ('dormitory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='engine.Dormitory')),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', i18nfield.fields.I18nCharField(max_length=60)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='RadioOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', i18nfield.fields.I18nCharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_creation_date', models.DateField(auto_now=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('0', 'pending'), ('1', 'rejected'), ('2', 'confirmed'), ('3', 'waiting-manager-action'), ('4', 'manager-updated')], default='0', max_length=2)),
                ('confirmation_deadline_date', models.DateField()),
                ('last_update_date', models.DateField(blank=True)),
                ('follow_up_message', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='RoomCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quota', models.IntegerField(default=0)),
                ('allowed_quota', models.IntegerField(default=0)),
                ('room_confirmation_days', models.IntegerField(default=2)),
                ('dormitory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_characteristics', to='engine.Dormitory')),
                ('price_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_characteristics', to='engine.Currency')),
            ],
        ),
        migrations.CreateModel(
            name='RoomPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='')),
                ('is_3d', models.BooleanField(default=False)),
                ('room_characteristics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='engine.RoomCharacteristics')),
            ],
        ),
        migrations.CreateModel(
            name='FeatureFilter',
            fields=[
                ('filter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engine.Filter')),
                ('is_dorm_feature', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('engine.filter',),
        ),
        migrations.CreateModel(
            name='IntegralChoice',
            fields=[
                ('choice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engine.Choice')),
                ('selected_number', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('engine.choice',),
        ),
        migrations.CreateModel(
            name='IntegralFilter',
            fields=[
                ('filter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engine.Filter')),
                ('is_optional', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('engine.filter',),
        ),
        migrations.CreateModel(
            name='RadioChoice',
            fields=[
                ('choice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engine.Choice')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('engine.choice',),
        ),
        migrations.CreateModel(
            name='RadioFilter',
            fields=[
                ('filter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engine.Filter')),
                ('is_optional', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('engine.filter',),
        ),
        migrations.AddField(
            model_name='reservation',
            name='room_characteristics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='engine.RoomCharacteristics'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='receipt',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='engine.Reservation'),
        ),
        migrations.AddField(
            model_name='filter',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_engine.filter_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='dormitory',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dormitories', to='engine.DormitoryCategory'),
        ),
        migrations.AddField(
            model_name='dormitory',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dormitories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='choice',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_engine.choice_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='engine.Currency'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='dormitory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='engine.Dormitory'),
        ),
        migrations.AddField(
            model_name='roomcharacteristics',
            name='features',
            field=models.ManyToManyField(related_name='room_characteristics', to='engine.FeatureFilter'),
        ),
        migrations.AddField(
            model_name='roomcharacteristics',
            name='integral_choices',
            field=models.ManyToManyField(related_name='integral_choices', to='engine.IntegralChoice'),
        ),
        migrations.AddField(
            model_name='roomcharacteristics',
            name='radio_choices',
            field=models.ManyToManyField(related_name='radio_choices', to='engine.RadioChoice'),
        ),
        migrations.AddField(
            model_name='radiooption',
            name='related_filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='engine.RadioFilter'),
        ),
        migrations.AddField(
            model_name='radiochoice',
            name='related_filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='radio_choices', to='engine.RadioFilter'),
        ),
        migrations.AddField(
            model_name='radiochoice',
            name='selected_option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='radio_choices', to='engine.RadioOption'),
        ),
        migrations.AddField(
            model_name='integralchoice',
            name='related_filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integral_choices', to='engine.IntegralFilter'),
        ),
        migrations.AddField(
            model_name='dormitory',
            name='features',
            field=models.ManyToManyField(related_name='features', to='engine.FeatureFilter'),
        ),
    ]
